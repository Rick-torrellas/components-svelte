* En el caso de tailwind, configurar las medidas responsives, y al sm, bajarlo a 400px. y crear una nueva medida "mini", que sea apartir de los 0px.
* Para agrupar estados o mediaqueries, es mejor agruparlos a todos en un grupo, como text_sm = "promiedades sm", y igual con text_hover = "propiedades hover"
* Las clases que compartan propiedades como los link, evitar copartir propiedades, ver cuales se repiten y copiar las que no, para evitar sobrescribir propiedades.
* Se puede crear varios objetos, en el index.js del proyecto, en estos objetos, pueden estar todos los componentes del proyecto,estos objetos pueden ser. tailwindcss, css, sass, etc.
* Crear un objeto especial, que tengan los componentes build-in, son componentes, basicos y abstractos, que tengan las propiedades basicas que puede tener un componente, se pueden organizar por categorias, puede existir un componente build-in superior para los botones, por ejemplo, que contengan todas las propiedades posibles para este, y de este sacar componentes mas limitados pero mas definidos por alguna caracteristica, estos son como moldes, para sacar los otros componentes normales. y tambien se pueden utilizar, para que el usaurio se cree se propio componente custom, con mayor libertad.
* Se puede crear un packete derivdo de este core-template-svelte, que usa componentes, para crear una platilla, y tan solo pasarle propiedades de diseno basica como coleres, etc y pasarle el contenido por medio de props.